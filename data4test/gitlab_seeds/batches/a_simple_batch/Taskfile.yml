# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!
  LBUILD_DIR: __localbuild__/sambuild
  LART_NAME: art.tar

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
    silent: true

  prepare:
    desc: prepare for build
    cmds:
      - rm -rf {{.LBUILD_DIR}}
      - mkdir -p {{.LBUILD_DIR}}/bdir
      - cp *.yml *.groovy {{.LBUILD_DIR}}/bdir

  build:
    desc: do the build
    dir: "{{.LBUILD_DIR}}/bdir"
    cmds:
      # - zip -r ../art.zip .
      - tar -cvf ../{{.LART_NAME}} .

  test:
    desc: test artifact
    cmds:
      - tar -tvf {{.LBUILD_DIR}}/{{.LART_NAME}}
      # - unzip -vl {{.LBUILD_DIR}}/art.zip


  ci-flow:
    desc: full build cycle
    jenlib:
      ci-flow: body
    cmds:
      - task prepare
      - task build
      - task test

  test-jenrunner-portable-minimal:
    desc: '{{.TASK}}'
    cmds:
      - |-
        rm -rf $(pwd)/__tmp__/jenkinsHome
        # mkdir -p  $(pwd)/__tmp__/jenkinsHome/userContent/
        # echo "asdfa sd" > $(pwd)/__tmp__/jenkinsHome/userContent/readme.txt
        # echo "asdfa sd" > $(pwd)/__tmp__/jenkinsHome/userContent/readme2.txt
        docker run --rm \
        -v $(pwd)/pipe_500_cmds_minimal.groovy:/workspace/Jenkinsfile \
        -v $(pwd)/__tmp__/jenkinsHome:/jenkinsHome  \
        jenkins/jenkinsfile-runner --runHome /jenkinsHome --httpPort 8080


  shell-jenrunner-portable-minimal:
    desc: '{{.TASK}}'
    cmds:
      - |-
        docker run --rm \
        -v $(pwd)/pipe_500_cmds_minimal.groovy:/workspace/Jenkinsfile \
        -v $(pwd)/__tmp__/build:/build \
        jenkins/jenkinsfile-runner --httpPort 8080