# https://taskfile.dev

version: '3'
includes:
  tests: 
    taskfile: e2e.test.tasks.yml
    dir: .

vars:
  _repo_root_: "$(realpath ../..)"

tasks:
  default:
    cmds:
      - task -l
    silent: true

  info:
    desc: Some Info
    cmds:
      - echo "Reach Jenkins. http://localhost:12080"
      - echo "Reach DevLab. http://localhost:12088"
    silent: true

  build:
    desc: _
    cmds:
      - docker-compose build

  stop:
    desc: _
    cmds:
      - docker-compose down || true

  run:
    desc: _
    cmds:
      - docker-compose up -d

  rerun:
    desc: _
    cmds:
      - task: stop
      - docker-compose rm
      - docker-compose up -d


  renew:
    desc: _
    cmds:
      - task: stop
      - task: build
      - task: rerun
      - task: info

  ci-flow:
    desc: _
    cmds:
      - task: resolve-dimgs
      - task: test-all-clean
      - task: stop
  
  test-all-clean:
    desc: _
    cmds:
      - task: renew
      - task: tests:test-all

  resolve-dimgs:
    desc: _
    deps:
      - task: build-jenconda
      - task: build-dev-editor
    cmds:
      - echo "resolved jenconda,dev-editor"

  build-jenconda: |-
    task -d {{._repo_root_}}/dockers/jenkins-master \
      docker:build:jenconda
  build-dev-editor: |-
    task -d {{._repo_root_}}/decks/dev-editor-local \
      build


# === aux tasks ===
  wait-for-host-up:
    desc: try to reach host untill timeout
    cmds:
      - |-
        #!/bin/bash
        set -eux

        declare HOST={{.host}}
        declare STATUS=$2
        declare TIMEOUT=$3

        HOST=$HOST STATUS=$STATUS timeout --foreground -s TERM $TIMEOUT bash -c \
            'while [[ ${STATUS_RECEIVED} != ${STATUS} ]];\
                do STATUS_RECEIVED=$(curl -s -o /dev/null -L -w ''%{http_code}'' ${HOST}) && \
                echo "received status: $STATUS_RECEIVED" && \
                sleep 1;\
            done;
            echo success with status: $STATUS_RECEIVED'
